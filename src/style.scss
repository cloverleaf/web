@charset "UTF-8";

// Import only what you need from Materialize

@import "node_modules/@materializecss/materialize/sass/components/normalize";

// Color
@import "node_modules/@materializecss/materialize/sass/components/color-variables";

$accent-color: #3f51b5;
$light-accent: lighten($accent-color, 15%);
$text-color: #535353;
$background-color: #fff;
$internal-color: #fff;
$incorrect-color: #f44336;
$correct-color: #8fff66;
$input-color: #000;
$link-color: #00539b;
$highlight-color: #eee;

$secondary-color: $accent-color;

$select-background: $internal-color;
$switch-checked-lever-bg: $light-accent;
$sidenav-bg-color: $background-color;
$button-raised-background: $accent-color;
$tabs-underline-color: $accent-color;
$tabs-text-color: $input-color;
$tabs-bg-color: $internal-color;
$input-border-color: $text-color;
$link-color: $link-color;

// Variables;
@import "node_modules/@materializecss/materialize/sass/components/variables";

$toast-action-color: $link-color;
$toast-action-color: var(--link-color);
$toast-color: $internal-color;
$toast-color: var(--internal-color);
$toast-text-color: $text-color;
$toast-text-color: var(--text-color);

// Components
@import "node_modules/@materializecss/materialize/sass/components/global";
@import "node_modules/@materializecss/materialize/sass/components/grid";
@import "node_modules/@materializecss/materialize/sass/components/typography";
@import "node_modules/@materializecss/materialize/sass/components/toast";
@import "node_modules/@materializecss/materialize/sass/components/tabs";
@import "node_modules/@materializecss/materialize/sass/components/tooltip";
@import "node_modules/@materializecss/materialize/sass/components/buttons";
@import "node_modules/@materializecss/materialize/sass/components/dropdown";
@import "node_modules/@materializecss/materialize/sass/components/waves";
@import "node_modules/@materializecss/materialize/sass/components/sidenav";
// Form parts
@import "node_modules/@materializecss/materialize/sass/components/forms/switches.scss";
@import "node_modules/@materializecss/materialize/sass/components/forms/select.scss";
@import "node_modules/@materializecss/materialize/sass/components/forms/input-fields.scss";



/* Material Icons */
@font-face {
  font-family: 'Material Icons';
  font-style: normal;
  font-weight: 400;
  /* For IE6-8 */
  src: url(material-design-icons-iconfont/dist/fonts/MaterialIcons-Regular.eot);
  src: local('Material Icons'),
    local('MaterialIcons-Regular'),
    url(material-design-icons-iconfont/dist/fonts/MaterialIcons-Regular.woff2) format('woff2'),
    url(material-design-icons-iconfont/dist/fonts/MaterialIcons-Regular.woff) format('woff'),
    url(material-design-icons-iconfont/dist/fonts/MaterialIcons-Regular.ttf) format('truetype');
  font-display: swap;
}

.material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  /* Preferred icon size */
  font-size: 24px;
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  /* Support for IE. */
  font-feature-settings: 'liga';
  user-select: none;
  font-display: block;
}

@font-face {
  font-family: 'Roboto Mono';
  font-style: normal;
  font-weight: 400;
  src: local('Roboto Mono'), local('RobotoMono-Regular'), url(../fonts/RobotoMono-Regular.ttf) format('truetype');
  font-display: swap;
}

@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  src: local('Roboto Light'), local('Roboto-Light'), url(../fonts/Roboto-Light.ttf) format('truetype');
  font-display: swap;
}

@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  src: local('Roboto'), local('Roboto-Regular'), url(../fonts/Roboto-Regular.ttf) format('truetype');
  font-display: swap;
}

@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 500;
  src: local('Roboto Medium'), local('Roboto-Medium'), url(../fonts/Roboto-Medium.ttf) format('truetype');
  font-display: swap;
}

:root {
  --accent-color: #{$accent-color};
  --light-accent: #{$light-accent};
  --text-color: #{$text-color};
  --background-color: #{$background-color};
  --internal-color: #{$internal-color};
  --incorrect-color: #{$incorrect-color};
  --correct-color: #{$correct-color};
  --input-color: #{$input-color};
  --link-color: #{$link-color};
  --highlight-color: #{$highlight-color};
}

html,
body {
  height: 100% !important;
  color: $input-color;
  color: var(--input-color);
  caret-color: $accent-color;
  caret-color: var(--accent-color);
  text-align: center;
  overflow-x: hidden;
}

* {
  transition: background-color .3s ease, color .3s ease;
}

body {
  font-family: 'Roboto', sans-serif;
  font-weight: 300;
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: $background-color;
  background-color: var(--background-color);
}

#box {
  text-align: center;
  max-width: calc(100% - (30px + 10em));
  max-height: 100%;
  margin: auto; /* This helps with compatibility  */
  grid-row: 1;
}

label,
.input-field>label {
  color: $text-color;
  color: var(--text-color);
  font-size: 1.5rem;
  transition: transform .3s ease-out, -webkit-transform .3s ease-out, background-color .3s ease, color .3s ease;
}

.input-field {
  margin-bottom: 0;
}

.input-field input[type=text],
.input-field input[type=number],
.input-field input[type=password] {
  border-bottom: 1px solid $text-color;
  border-bottom: 1px solid var(--text-color);
  transition: border .3s ease-out, background-color .3s ease, color .3s ease;
}

/* label underline focus color */
.input-field input[type=text]:focus,
.input-field input[type=number]:focus,
.input-field input[type=password]:focus {
  border-bottom: 1px solid $accent-color !important;
  border-bottom: 1px solid var(--accent-color) !important;
  box-shadow: 0 1px 0 0 $accent-color !important;
  box-shadow: 0 1px 0 0 var(--accent-color) !important;
}

input[type=text]:not(#result):not(.select-dropdown),
input[type=number]:not(#length-pref),
input[type=password]:not(#result) {
  font-size: 3rem !important;
  height: 1.2em !important;
  box-sizing: content-box;
  font-family: 'Roboto', sans-serif;
  font-weight: 300;
}

input[type=number] {
  margin-bottom: 0;
  overflow: scroll
}

#back {
  box-shadow: 0 0.26em 0.65em 0 rgba(0, 0, 0, 0.2);
  background-color: $internal-color;
  background-color: var(--internal-color);
  border-radius: 0.325em;
  padding: 0.975em;
  padding-top: 1.5em;
  margin: 2em 0;
  max-height: 100%;
}

#result {
  font-family: 'Roboto Mono', monospace;
  font-size: 2rem;
  padding: 0.9rem 0;
  min-height: 1em;
  min-width: 20%;
  border: none;
  text-align: center;
  margin: 0;
  width: 100%;
  color: $input-color;
  color: var(--input-color);
}

// Colour fix
#result::placeholder {
  color: $input-color !important;
  color: var(--input-color) !important;
  opacity: 1;
}

#copy {
  display: block;
  margin: auto;
}

.hint {
  float: left;
  color: $text-color;
  color: var(--text-color);
  width: 100%;
  text-align: left;
}

input,
textarea {
  font-size: 1.56rem;
  padding: 0.65rem;
  color: $input-color !important;
  color: var(--input-color) !important;
  margin: 0 0 0.8rem 0 !important;
}

input#length {
  margin: 0 !important;
  height: 1em; /* To stop the input wiggling on firefox */
}

#faq {
  float: right;
  cursor: help;
  font-weight: 500;
  margin-top: 0.4em;
}

.cf:before,
.cf:after {
  content: " ";
  display: table;
}

.cf:after {
  clear: both;
}

ul.autocomplete-content.dropdown-content {
  background: $background-color;
  background: var(--background-color);
  position: absolute !important;
  width: calc(100% - 3rem);
  max-height: calc(82% * 4); /* 82% seems to work out as one row */
  overflow-y: auto;
  overflow-x: hidden;
  top: -.1em;
  margin-top: 0;
}

ul.autocomplete-content.dropdown-content li {
  height: 3em;
  min-height: 0;
}

/* Presets */
.dropdown-content li:hover,
.dropdown-content li.active,
.dropdown-content li.selected,
/* Theme selection */
body.keyboard-focused .select-dropdown.dropdown-content li:focus,
.select-dropdown.dropdown-content li.selected {
  background: $highlight-color;
  background: var(--highlight-color);
}

ul.autocomplete-content.dropdown-content li img.right.circle {
  overflow: hidden;
  background: #fff;
  width: calc(20% - 0.66em);
  height: 100%;
  padding: 0.33em;
  margin: 0;
}

ul.autocomplete-content.dropdown-content span {
  /* display: inline-flex; */
  align-items: center;
  white-space: nowrap;
  max-width: 70%;
  height: 100%;
  /* vertical-align: middle; */
  font-size: 1em;
  padding: 0.875em 1em;
  overflow: hidden;
  /* To allow scaling */
  line-height: 1.57em;
}

ul.autocomplete-content.dropdown-content span:not(.highlight) {
  color: $text-color;
  color: var(--text-color);
  overflow-x: hidden;
}

ul.autocomplete-content.dropdown-content span .highlight {
  max-width: 100%;
  color: $text-color;
  color: var(--text-color);
  font-weight: 400;
  overflow: visible;
  padding: 0;
}

.dropdown-content::-webkit-scrollbar {
  width: 17px !important;
  background-color: #fff !important;
}

.dropdown-content::-webkit-scrollbar-track {
  width: 17px;
  background-color: #fff !important;
}

.dropdown-content::-webkit-scrollbar-thumb {
  border-radius: 100px;
  width: 17px;
  background-color: rgba(0, 0, 0, 0.5);
}

/*If I keep the rounded element, the twitter bird's beak gets cut :-;*/
.circle {
  object-fit: scale-down;
  border-radius: 0;
}

#back .switch {
  padding-bottom: 1.3rem;
}

input[type=checkbox]:checked:not(:disabled)~.lever:active::before,
input[type=checkbox]:checked:not(:disabled).tabbed:focus~.lever::before {
  transform: scale(2.4);
  background-color: rgba($accent-color, 0.3);
  background-color: rgba(var(--accent-RGBs), 0.3);
}

/*Switch knob*/
.switch label input[type=checkbox]:checked+.lever:after {
  background-color: $accent-color;
  background-color: var(--accent-color);
}

/*Switch backing*/
.switch label input[type=checkbox]:checked+.lever {
  background-color: $light-accent;
  background-color: var(--light-accent);
}

#passTogglelever {
  left: -4px; /* Centering the toggle */
}

.icon {
  font-size: 1.4em !important;
  color: $text-color;
  color: var(--text-color);
  transition: color .2s;
  cursor: pointer;
}

.icon:hover {
  color: $light-accent;
  color: var(--light-accent);
}

.icon:active {
  color: $accent-color;
  color: var(--accent-color);
}

.input-field label:not(.label-icon).active {
  -webkit-transform: translateY(-1em) scale(0.8);
  transform: translateY(-1em) scale(0.8);
  -webkit-transform-origin: 0 0;
  transform-origin: 0 0;
}

.toast {
  font-weight: 400
}

/* Negative toasts get this */
.toast.warning {
  color: $input-color;
  color: var(--input-color);
  background-color: $incorrect-color;
  background-color: var(--incorrect-color);
}

/* Positive toasts get this */
.toast.success {
  background-color: $correct-color;
  background-color: var(--correct-color);
  color: #000;
}

#jsBanner {
  position: absolute;
  width: 100%;
  height: 100%;
  text-align: center;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 500;
  font-size: 10vmin;
  top: 0;
  left: 0;
  color: $background-color;
  color: var(--background-color);
  -webkit-text-stroke-width: 0.05em !important;
  -webkit-text-stroke-color: $text-color !important;
  -webkit-text-stroke-color: var(--text-color) !important;
  padding: 10px;
}

#jsBanner a {
  color: $background-color;
  color: var(--background-color);
  -webkit-text-stroke: 3px $text-color;
  -webkit-text-stroke: 3px var(--text-color);
  text-decoration: underline;
}

#logo {
  max-width: 100%;
  max-height: 100%;
}

#app {
  margin-bottom: 0.55em !important;
  width: calc(100% - 3.6rem) !important;
  padding-right: 1.2em !important;
  align-self: flex-end;
  display: block;
  white-space: nowrap;
}

ul:empty {
  display: none;
}

/* Disable Edge's show/hide since we made one */
::-ms-reveal {
  display: none;
}

/* For portrait logos so they don't oversize */
#logo-container {
  margin-right: 5px;
  background: #fff;
  padding: 3px;
  border-radius: 5px;
  height: calc(3rem + 0.1em);
  display: none;
  justify-content: center;
  align-items: center;
  top: 0;
}

input[type="radio"] {
  margin: 0;
  width: 0;
  height: 0;
  padding: 0;
}

input[type="radio"]:checked+label::before {
  box-shadow: 0 0 3px 1px $text-color;
  box-shadow: 0 0 3px 1px var(--text-color);
}

label:focus {
  outline: none;
}

.github-corner {
  fill: $accent-color;
  fill: var(--accent-color);
  color: $background-color;
  color: var(--background-color);
  position: absolute;
  top: 0;
  border: 0;
  right: 0;
}

.github-corner:hover .octo-arm {
  animation: octocat-wave 560ms ease-in-out;
}

@keyframes octocat-wave {

  0%,
  100% {
    transform: rotate(0);
  }

  20%,
  60% {
    transform: rotate(-25deg);
  }

  40%,
  80% {
    transform: rotate(10deg);
  }
}
.tabs {
  background-color: $internal-color;
  background-color: var(--internal-color);
  cursor: pointer;
  overflow-x: hidden;
  z-index: 995;
}

.tabs .tab a,
.tabs .tab a:hover {
  color: $text-color;
  color: var(--text-color);
  font-size: 1em;
  padding: 0 .5em;
}

.tabs .tab a:focus,
.tabs .tab a:focus.active {
  background-color: $background-color;
  background-color: var(--background-color);
}

.tabs .tab a.active {
  color: $input-color;
  color: var(--input-color);
  font-weight: 400;
}

.tabs .indicator {
  background: $accent-color;
  background-color: var(--accent-color)
}

.btn {
  height: 2.4em;
  line-height: 2.4em;
  font-family: 'Roboto', sans-serif;
  font-weight: 300;
  font-size: 1rem;
  padding: 0 2rem;
  background: $accent-color;
  background: var(--accent-color);
}

.btn:focus,
.btn:hover {
  background: $accent-color;
  background: var(--accent-color);
}

.switch label .lever {
  height: 0.933em;
  width: 2.4em;
}

.switch label .lever::before,
.switch label .lever::after {
  height: 1.33em;
  width: 1.33em;
}

.switch label input[type="checkbox"]:checked+.lever::before,
.switch label input[type="checkbox"]:checked+.lever::after {
  left: 1.4em;
}

.switch label .lever::before,
.switch label .lever::after {
  top: -0.2em;
}

.material-tooltip {
  max-width: 7em;
}

/* If the device can't hover, don't show tooltips */
@media (hover: none) {
  .material-tooltip {
    display: none;
  }
}

.material-tooltip {
  background-color: $internal-color;
  background-color: var(--internal-color);
  box-shadow: 0 0.26em 0.65em 0 rgba(0, 0, 0, 0.2);
  color: $text-color;
  color: var(--text-color);
}

/* In the future focus-visable should be used. See https://caniuse.com/?#search=css-focus-visible */
.btn:focus,
.btn-large:focus,
.btn-small:focus,
.btn-floating:focus,
.btn-large:focus,
.btn-small:focus,
.btn-flat:focus {
  outline: rgb(77, 144, 254) auto 5px;
  outline-color: rgb(77, 144, 254);
  outline-style: auto;
  outline-width: 5px;
}

/* Always show arrows on the number inputs */
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  opacity: 1;
}

ul.tabs li.tab a i.material-icons {
  vertical-align: middle;
  color: $incorrect-color;
  color: var(--incorrect-color);
}

/* Normal size */
.btn-floating {
  width: 2.86rem;
  height: 2.86rem;
}

.btn-floating i {
  font-size: 1.6rem;
  line-height: 2.86rem;
  display: block;
  top: 0;
}

/* Large size */
.btn-floating.btn-large {
  width: 4rem;
  height: 4rem;
}

.btn-floating.btn-large i {
  font-size: 2rem;
  line-height: 4rem;
}

/* If we're on a small/mobile device */
@media only all and (max-width:40em) {

  body {
    background-color: var(--internal-color);
  }

  #back {
    /* Ditch loads of padding */
    margin: 0;
    box-shadow: none;

    min-height: 100%;
    border-radius: 0;
  }

  #box {
    width: 100VW;
    max-width: 100VW;
    min-height: 100%;
  }

  /* Install icon */
  #install-icon {
    padding-right: .5vw;
  }

  /* Normal size */
  .btn-floating {
    width: 10vw;
    height: 10vw;
  }

  .btn-floating i {
    font-size: 5vw;
    line-height: 10vw;
  }

  /* Large size */
  .btn-floating.btn-large {
    width: 15vw;
    height: 15vw;
  }

  .btn-floating.btn-large i {
    font-size: 7.5vw;
    line-height: 15vw;
  }

  .github-corner {
    color: $internal-color;
    color: var(--internal-color);
  }
}

/* If it won't fit vertically */
@media only all and (max-height:600px ) and (min-width:40em) {
  html {
    /* Drop the font size */
    font-size: 2vh;
  }
}

.sidenav {
  background-color: $background-color;
  background-color: var(--background-color);
  width: 350px;
  max-width: 100%;
  overflow-y: hidden;
  padding-bottom: 0;
}

.sidenav li>a {
  font-weight: 300;
}

/* Shows warning icons properly */
.sidenav li>a>i,
.sidenav li>a>[class^="mdi-"],
.sidenav li>a li>a>[class*="mdi-"],
.sidenav li>a>i.material-icons {
  margin: 0;
  float: none;
}

#settings {
  position: absolute;
  left: 1vw;
  bottom: 1vw;
  display: block;
}

#settings a i.material-icons {
  display: block;
  font-size: 2.5em;
  color: $text-color;
  color: var(--text-color);
}

.sidenav label:not([for=length-pref]) {
  font-size: 1rem;
  top: -33px;
}

#options {
  padding: 10px;
  // padding-top: 0;
  display: grid;
  height: calc(100% - 8px);
  grid-template-rows: repeat(12, 1fr);
  // grid-template-rows: repeat(auto-fill, minmax(70px, 1fr))
  // grid-auto-rows: repeat(min-content, 60px) ;
}

.sidenav .dropdown-content {
  background: $background-color;
  background: var(--background-color);
}

.sidenav .dropdown-content li>a,
.dropdown-content li>span {
  color: $input-color;
  color: var(--input-color);
}

select {
  background-color: $internal-color;
  background-color: var(--internal-color);

  border: 1px solid $text-color;
  border: 1px solid var(--text-color);
  border-radius: 3px;

  color: $input-color;
  color: var(--input-color);
}

select:focus {
  border: 1px solid $light-accent;
  border: 1px solid var(--light-accent);
  outline: none;
}

#options div.input-field {
  margin-top: 2.5rem;
}

#options a {
  margin-top: 1rem;
}

.btn i {
  vertical-align: top;
}

.drag-target {
  left: 0;
}

.sidenav .switch label {
  font-size: 1.2em;
}

.sidenav {
  place-content: center;
}

#theme-container {
  grid-row: 1;
}

#session-container {
  grid-row: 3;
  padding-bottom: 0;
}

#footer {
  grid-row: last-line;
}

#install-container {
  display: grid;
  grid-template-columns: 1fr calc(2.4em + 10px);
  align-content: stretch;
}

#close {
  cursor: pointer;
  align-self: end;
  justify-self: flex-end;
  font-size: 2.4em;
  color: $input-color;
  color: var(--input-color);
}

a {
  color: $link-color;
  color: var(--link-color);
}

#length-pref {
  font-size: 2em;
  font-weight: 300;
}
